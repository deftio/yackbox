{"version":3,"file":"yackbox.cjs.min.js","sources":["../src/yackbox.js"],"sourcesContent":["export default class yackbox {\n    constructor(div, completionCallback, streamCallback) {\n\n        this.container = (typeof(div) == \"string\") ? document.querySelector(div) : (div instanceof HTMLElement) ? div : null;\n        if (!this.container) {\n            console.error(\"Invalid container element for yackbox, creating a new one.\");\n            this.container = document.createElement('div');\n        }\n        this.userName = \"You\";\n        this.userAlignment = \"left\";\n        this.completionCallback = (completionCallback) ? completionCallback : () => {};\n        this.streamCallback = (streamCallback) ? streamCallback : () => {};\n        this.messages = [];\n        this.echo = true; // echo user input\n        this.users = {}\n       // this.users = {}\n        this.initUI();\n    }\n\n    addCompletionCallback (completionCallback) {\n        this.completionCallback = (completionCallback) ? completionCallback : () => {};\n    }\n    addStreamCallback (streamCallback) {\n        this.streamCallback = (streamCallback) ? streamCallback : () => {};\n    }\n    \n    addUserMessage(content) {\n        this.addMessage(content, this.userName, this.userAlignment);\n    }\n    setDefaultUserName(user = \"You\", alignment = \"right\") {\n        this.userName = user;\n        this.userAlignement = alignment;\n    }\n    setUserInputEcho(echo) {\n        this.echo = (echo) ? true: false;\n        return this.echo;\n    }\n    showInputArea(show) {\n        if (show) {\n            this.inputAreaBox.style.display = \"\";\n             this.messagesContainer.style.height = \"88%;\"\n        }\n        else {\n            this.inputAreaBox.style.display = \"none\";\n            this.messagesContainer.style.height = \"98%\"\n        }\n    }\n    \n    // add a new message to the chat\n    addMessage(content, user, alignment = 'left') {\n        const id = this.messages.length;\n        const timestamp  = (new Date()).toUTCString();\n        const message = { id, user, content, alignment , timestamp};\n        this.messages.push(message);\n        const lcr = (alignment == \"left\" )? \"yackbox-left\" : (alignment == \"right\")? \"yackbox-right\" :  \"yackbox-center\";\n        const userContent = `<div class=\"yackbox-username ${lcr}\">${user}</div>`;\n        const messageContent = `<div class=\"yackbox-content ${lcr}\">${content}</div>`;\n        const messageHTML = \n            `<div id=\"yackbox-msg${id}\" class=\"yackbox-message ${lcr}\">${userContent}${messageContent}</div>` ;\n\n        \n        this.messagesContainer.innerHTML += messageHTML;\n        this.messagesContainer.lastChild.scrollIntoView()\n        return id;\n    }\n    // update all the fields of an existing message\n    updateMessageFull(id, content, user = null, side = null) {\n        const message = this.messages.find(msg => msg.id === id);\n        if (!message) return;\n        if (content) message.content = content;\n        if (user) message.user = user;\n        if (side) message.whichSide = side;\n        message.lastUpdateTimestamp = (new Date()).toUTCString();\n        const messageDiv = this.container.querySelector(`#msg-${id}`);\n        if (messageDiv) {\n            const userContent = `<div class=\"yackbox-username\">${message.user}</div>`;\n            const messageContent = `<div class=\"yackbox-content\">${message.content}</div>`;\n            messageDiv.innerHTML = \n                `${messageContent}${userContent}`;\n        }\n        return id;\n    }\n    \n    // append content to an existing message, useful for streaming\n    appendMessageContent(id, content) {\n        const message = this.messages.find(msg => msg.id === id);\n        if (!message) return;\n\n        if (content) \n            message.content += content;\n        \n        message.lastUpdateTimestamp = (new Date()).toUTCString();\n\n        const messageDiv = this.container.querySelector(`#yackbox-msg${id} .yackbox-content`);\n        if (messageDiv) {\n            messageDiv.innerHTML = message.content;\n            messageDiv.scrollIntoView(false);\n\n        }\n        return id;\n    }\n\n    // remove a single message\n    removeMessage(id) {\n        const messageIndex = this.messages.findIndex(msg => msg.id === id);\n        if (messageIndex > -1) {\n            this.messages.splice(messageIndex, 1);\n            const messageDiv = this.container.querySelector(`.yackbox-msg${id}`);\n            if (messageDiv) {\n                messageDiv.parentNode.removeChild(messageDiv);\n            }\n            return true;\n        }\n        return false; // didn't do anything\n    }\n\n    //remove all messages\n    removeMessageAll() {\n        this.messages=[]; \n    }\n    initUI() {\n        this.container.innerHTML = `\n            <div class=\"yackbox-container\">\n                <div class=\"yackbox-messages\"></div>\n                <div class=\"yackbox-input-area\">\n                    <textarea class=\"yackbox-input-textbox\" placeholder=\"Type here...\"></textarea>\n                    <div class=\"yackbox-sep\"></div>\n                    <button class=\"yackbox-submit\">Send</button>\n                </div>\n            </div>\n        `;\n\n        this.messagesContainer = this.container.querySelector('.yackbox-messages');\n        this.messagesContainer.scrollIntoView(false);\n\n        this.inputAreaBox = this.container.querySelector('.yackbox-input-area');\n        this.inputTextArea = this.container.querySelector('.yackbox-input-textbox');\n        this.submitButton = this.container.querySelector('.yackbox-submit');\n\n        // Add event listener to the chat input textarea\n        const inputTextarea = this.inputTextArea;\n\n        // memoize callback fn\n        let admsg   = this.addMessage.bind(this);\n        let apndmsg = this.appendMessageContent.bind(this);\n        var addMsgCB  = function (c,u,a){return admsg(c,u,a)};\n        var apndMsgCB = function (id,c){return apndmsg(id,c)}\n\n        let handleUserSubmit= () => {\n            // Submit the message\n            const content = inputTextarea.value.trim(); // Remove leading/trailing whitespace\n            if (content !== '') {\n                // if echo, write the user's content to the chat area\n                const user = this.userName;\n                if (this.echo)\n                    this.addMessage(content, user, this.userAlignment); \n                inputTextarea.value = ''; // Clear input field after sending\n\n                // Call the bot response completionCallback function, passing the user's input\n                this.completionCallback({content,user}, addMsgCB, apndMsgCB);\n        }}\n        inputTextarea.addEventListener('keydown',  (event) => {\n            // Check if Shift + Enter is pressed\n            if (event.shiftKey && event.keyCode === 13) {\n                // Prevent default behavior (adding new line)\n                event.preventDefault();\n                handleUserSubmit();\n            }\n        });\n\n        this.submitButton.addEventListener('click',  () => {handleUserSubmit() });\n    }\n    getMessageHistory(n,m) {\n        if (this.messages.length <=0)\n            return [];\n\n        if (typeof(n) != \"number\")\n            return [];\n\n        if (typeof(m) == \"number\" ) {\n            if (n < m)\n                return this.messages.slice(n,m);\n            else\n                return this.messages.slice(m,n);\n        }\n        else {\n            if (n<0)\n                n = this.messages.length+n;\n            return [this.messages[n]]\n        }\n    }\n    getMessageStats() {\n        let stats = {\n            \"numMessages\" : this.messages.length,\n            \"numUsers\" : this.user.keys().length,\n            \"firstMsgTimestamp\" : this.messages.length >0 ? this.messages[0].timestamp : \"\",\n            \"lastMsgTimestamp\"  : this.messages.length >0 ? this.messages[this.messages.length-1].timestamp : \"\",\n\n        }\n        \n        return stats;\n    }\n}\n"],"names":["yackbox","div","completionCallback","streamCallback","_classCallCheck","this","container","document","querySelector","HTMLElement","console","error","createElement","userName","userAlignment","messages","echo","users","initUI","key","value","content","addMessage","user","arguments","length","undefined","alignment","userAlignement","show","inputAreaBox","style","display","messagesContainer","height","id","message","timestamp","Date","toUTCString","push","lcr","userContent","concat","messageContent","messageHTML","innerHTML","lastChild","scrollIntoView","side","find","msg","whichSide","lastUpdateTimestamp","messageDiv","messageIndex","findIndex","splice","parentNode","removeChild","_this","inputTextArea","submitButton","inputTextarea","admsg","bind","apndmsg","appendMessageContent","addMsgCB","c","u","a","apndMsgCB","handleUserSubmit","trim","addEventListener","event","shiftKey","keyCode","preventDefault","n","m","slice","numMessages","numUsers","keys","firstMsgTimestamp","lastMsgTimestamp"],"mappings":"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"}